# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /about                      controllers.Application.about
GET     /contact                    controllers.Application.contact

# studies
GET     /study                      controllers.StudyController.index
GET     /study/add                  controllers.StudyController.addStudy
POST    /study/addSubmit            controllers.StudyController.addStudySubmit
GET     /study/update/:id           controllers.StudyController.updateStudy(id:String)
POST    /study/updateSubmit/:id     controllers.StudyController.updateStudySubmit(id:String)
GET     /study/show/:id             controllers.StudyController.showStudy(id:String)

# specimen groups
GET     /study/sg/add/:id           controllers.StudyController.addSpecimenGroup(id:String)
POST    /study/sg/addSubmit         controllers.StudyController.addSpecimenGroupSubmit(id:String, name:String)
GET     /study/sg/update            controllers.StudyController.updateSpecimenGroup(studyId:String, studyName: String, sgId:String)
POST    /study/sg/updateSubmit      controllers.StudyController.updateSpecimenGroupSubmit(id:String, name:String)
GET     /study/sg/show              controllers.StudyController.showSpecimenGroups(studyId:String,studyName:String)

# user
GET     /user/profile               controllers.UserController.profile

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling (only needed if you are using UsernamePasswordProvider)
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange


# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

GET     /assets/stylesheets/img/glyphicons-halflings-white.png      controllers.Assets.at(path="/public", file="/images/glyphicons-halflings-white.png")
GET     /assets/stylesheets/img/glyphicons-halflings.png            controllers.Assets.at(path="/public", file="/images/glyphicons-halflings.png")

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)