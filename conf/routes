# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.index
GET     /about                      controllers.Application.about
GET     /contact                    controllers.Application.contact

# studies
GET     /study                      controllers.study.StudyController.index
GET     /study/summary/:id          controllers.study.StudyController.summary(id)
GET     /study/show/:id             controllers.study.StudyController.showStudy(id)
GET     /study/add                  controllers.study.StudyController.addStudy
POST    /study/add                  controllers.study.StudyController.addStudySubmit
GET     /study/update/:id           controllers.study.StudyController.updateStudy(id)
POST    /study/update/:id           controllers.study.StudyController.updateStudySubmit(id)

# study Ajax calls
GET     /study/summary/:studyId/:studyName         controllers.study.StudyController.summaryTab(studyId,studyName)
GET     /study/participants/:studyId/:studyName    controllers.study.StudyController.participantsTab(studyId,studyName)
GET     /study/specimens/:studyId/:studyName       controllers.study.StudyController.specimensTab(studyId, studyName)
GET     /study/cevents/list/:studyId/:studyName    controllers.study.StudyController.ceventsTab(studyId,studyName)
GET     /study/pevents/list/:studyId/:studyName    controllers.study.StudyController.peventsTab(studyId,studyName)

# specimen groups
GET     /study/sg/add/:studyId/:studyName              controllers.study.SpecimenGroupController.addSpecimenGroup(studyId, studyName)
POST    /study/sg/add                         	       controllers.study.SpecimenGroupController.addSpecimenGroupSubmit
GET     /study/sg/update/:studyId/:studyName/:sgId     controllers.study.SpecimenGroupController.updateSpecimenGroup(studyId, studyName, sgId)
POST    /study/sg/update                      	       controllers.study.SpecimenGroupController.updateSpecimenGroupSubmit
GET     /study/sg/remove/:studyId/:studyName/:sgId     controllers.study.SpecimenGroupController.removeSpecimenGroup(studyId, studyName, sgId)
POST    /study/sg/remove                      	       controllers.study.SpecimenGroupController.removeSpecimenGroupSubmit

# collection event types
GET     /study/cetype/add/:studyId/:studyName              controllers.study.CeventTypeController.addCeventType(studyId, studyName)
POST    /study/cetype/add                                  controllers.study.CeventTypeController.addCeventTypeSubmit
GET     /study/cetype/update/:studyId/:studyName/:cetId    controllers.study.CeventTypeController.updateCeventType(studyId, studyName, cetId)
POST    /study/cetype/update                               controllers.study.CeventTypeController.updateCeventTypeSubmit
GET     /study/cetype/remove/:studyId/:studyName/:cetId    controllers.study.CeventTypeController.removeCeventType(studyId, studyName, cetId)
GET     /study/cetype/remove                               controllers.study.CeventTypeController.removeCeventTypeSubmit

# collection event annotation types
GET     /study/cevent/annot/add/:studyId/:studyName                 controllers.study.CeventAnnotTypeController.addAnnotationType(studyId, studyName)
POST    /study/cevent/annot/add                                     controllers.study.CeventAnnotTypeController.addAnnotationTypeSubmit
GET     /study/cevent/annot/update/:studyId/:studyName/:annotId     controllers.study.CeventAnnotTypeController.updateAnnotationType(studyId, studyName, annotId)
POST    /study/cevent/annot/update                                  controllers.study.CeventAnnotTypeController.updateAnnotationTypeSubmit
GET     /study/cevent/annot/remove/:studyId/:studyName/:annotId     controllers.study.CeventAnnotTypeController.removeAnnotationType(studyId, studyName, annotId)
POST    /study/cevent/annot/remove                                  controllers.study.CeventAnnotTypeController.removeAnnotationTypeSubmit

# participant annotation types
GET     /study/participant/annot/add/:studyId/:studyName                 controllers.study.ParticipantAnnotTypeController.addAnnotationType(studyId, studyName)
POST    /study/participant/annot/add                                     controllers.study.ParticipantAnnotTypeController.addAnnotationTypeSubmit
GET     /study/participant/annot/update/:studyId/:studyName/:annotId     controllers.study.ParticipantAnnotTypeController.updateAnnotationType(studyId, studyName, annotId)
POST    /study/participant/annot/update                                  controllers.study.ParticipantAnnotTypeController.updateAnnotationTypeSubmit
GET     /study/participant/annot/remove/:studyId/:studyName/:annotId     controllers.study.ParticipantAnnotTypeController.removeAnnotationType(studyId, studyName, annotId)
POST    /study/participant/annot/remove                                  controllers.study.ParticipantAnnotTypeController.removeAnnotationTypeSubmit

# specimenlink annotation types
GET     /study/spclink/annot/add/:studyId/:studyName                 controllers.study.SpecimenLinkAnnotTypeController.addAnnotationType(studyId, studyName)
POST    /study/spclink/annot/add                                     controllers.study.SpecimenLinkAnnotTypeController.addAnnotationTypeSubmit
GET     /study/spclink/annot/update/:studyId/:studyName/:annotId     controllers.study.SpecimenLinkAnnotTypeController.updateAnnotationType(studyId, studyName, annotId)
POST    /study/spclink/annot/update                                  controllers.study.SpecimenLinkAnnotTypeController.updateAnnotationTypeSubmit
GET     /study/spclink/annot/remove/:studyId/:studyName/:annotId     controllers.study.SpecimenLinkAnnotTypeController.removeAnnotationType(studyId, studyName, annotId)
POST    /study/spclink/annot/remove                                  controllers.study.SpecimenLinkAnnotTypeController.removeAnnotationTypeSubmit

# user
GET     /user/profile               controllers.UserController.profile

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

GET     /assets/stylesheets/img/glyphicons-halflings-white.png      controllers.Assets.at(path="/public", file="/images/glyphicons-halflings-white.png")
GET     /assets/stylesheets/img/glyphicons-halflings.png            controllers.Assets.at(path="/public", file="/images/glyphicons-halflings.png")

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)
