# -*- mode: text; eval: (auto-fill-mode 0);  -*-
#
# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


# Home page
GET     /                                      @org.biobank.controllers.Application.index

# studies
GET     /studies                               @org.biobank.controllers.study.StudiesController.list
POST    /studies                               @org.biobank.controllers.study.StudiesController.add

# value objects
GET     /studies/valuetypes                    @org.biobank.controllers.study.StudiesController.valueTypes
GET     /studies/anatomicalsrctypes            @org.biobank.controllers.study.StudiesController.anatomicalSourceTypes
GET     /studies/specimentypes                 @org.biobank.controllers.study.StudiesController.specimenTypes
GET     /studies/preservtypes                  @org.biobank.controllers.study.StudiesController.preservTypes
GET     /studies/preservtemptypes              @org.biobank.controllers.study.StudiesController.preservTempTypes
GET     /studies/sgvaluetypes                  @org.biobank.controllers.study.StudiesController.specimenGroupValueTypes

GET     /studies/:id                           @org.biobank.controllers.study.StudiesController.query(id)
PUT     /studies/:id                           @org.biobank.controllers.study.StudiesController.update(id)
POST    /studies/:id/enable                    @org.biobank.controllers.study.StudiesController.enable(id)
POST    /studies/:id/disable                   @org.biobank.controllers.study.StudiesController.disable(id)
POST    /studies/:id/retire                    @org.biobank.controllers.study.StudiesController.retire(id)
POST    /studies/:id/unretire                  @org.biobank.controllers.study.StudiesController.unretire(id)

# specimen groups
GET     /studies/:studyId/sgroups              @org.biobank.controllers.study.SpecimenGroupController.get(studyId, sgId: Option[String])
POST    /studies/:studyId/sgroups              @org.biobank.controllers.study.SpecimenGroupController.addSpecimenGroup(studyId)
PUT     /studies/:studyId/sgroups/:id          @org.biobank.controllers.study.SpecimenGroupController.updateSpecimenGroup(studyId, id)
DELETE  /studies/:studyId/sgroups/:id/:ver     @org.biobank.controllers.study.SpecimenGroupController.removeSpecimenGroup(studyId, id, ver: Long)
GET     /studies/:studyId/sgroups/inuse        @org.biobank.controllers.study.SpecimenGroupController.getInUse(studyId, sgId: Option[String])

# collection event types
GET     /studies/:studyId/cetypes              @org.biobank.controllers.study.CeventTypeController.get(studyId, cetId: Option[String])
POST    /studies/:studyId/cetypes              @org.biobank.controllers.study.CeventTypeController.addCollectionEventType(studyId)
PUT     /studies/:studyId/cetypes/:id          @org.biobank.controllers.study.CeventTypeController.updateCollectionEventType(studyId, id)
DELETE  /studies/:studyId/cetypes/:id/:ver     @org.biobank.controllers.study.CeventTypeController.removeCollectionEventType(studyId, id, ver: Long)

## collection event annotation types
GET     /studies/:studyId/ceannottypes          @org.biobank.controllers.study.CeventAnnotTypeController.get(studyId, annotTypeId: Option[String])
POST    /studies/:studyId/ceannottypes          @org.biobank.controllers.study.CeventAnnotTypeController.addAnnotationType(studyId)
PUT     /studies/:studyId/ceannottypes/:id      @org.biobank.controllers.study.CeventAnnotTypeController.updateAnnotationType(studyId, id)
DELETE  /studies/:studyId/ceannottypes/:id/:ver @org.biobank.controllers.study.CeventAnnotTypeController.removeAnnotationType(studyId, id, ver: Long)

# participant annotation types
GET     /studies/:studyId/pannottypes           @org.biobank.controllers.study.ParticipantAnnotTypeController.get(studyId, annotTypeId: Option[String])
POST    /studies/:studyId/pannottypes           @org.biobank.controllers.study.ParticipantAnnotTypeController.addAnnotationType(studyId)
PUT     /studies/:studyId/pannottypes/:id       @org.biobank.controllers.study.ParticipantAnnotTypeController.updateAnnotationType(studyId, id)
DELETE  /studies/:studyId/pannottypes/:id/:ver  @org.biobank.controllers.study.ParticipantAnnotTypeController.removeAnnotationType(studyId, id, ver: Long)

# specimenlink annotation types
GET     /studies/:studyId/slannottypes          @org.biobank.controllers.study.SpecimenLinkAnnotTypeController.get(studyId, annotTypeId: Option[String])
POST    /studies/:studyId/slannottypes          @org.biobank.controllers.study.SpecimenLinkAnnotTypeController.addAnnotationType(studyId)
PUT     /studies/:studyId/slannottypes/:id      @org.biobank.controllers.study.SpecimenLinkAnnotTypeController.updateAnnotationType(studyId, id)
DELETE  /studies/:studyId/slannottypes/:id/:ver @org.biobank.controllers.study.SpecimenLinkAnnotTypeController.removeAnnotationType(studyId, id, ver: Long)

# processing types
GET     /studies/:studyId/proctypes             @org.biobank.controllers.study.ProcessingTypeController.get(studyId, procTypeId: Option[String])
POST    /studies/:studyId/proctypes             @org.biobank.controllers.study.ProcessingTypeController.addProcessingType(studyId)
PUT     /studies/:studyId/proctypes/:id         @org.biobank.controllers.study.ProcessingTypeController.updateProcessingType(studyId, id)
DELETE  /studies/:studyId/proctypes/:id/:ver    @org.biobank.controllers.study.ProcessingTypeController.removeProcessingType(studyId, id, ver: Long)

# specimen link types
GET     /studies/:procTypeId/sltypes            @org.biobank.controllers.study.SpecimenLinkTypeController.get(procTypeId, slTypeId: Option[String])
POST    /studies/:procTypeId/sltypes            @org.biobank.controllers.study.SpecimenLinkTypeController.addSpecimenLinkType(procTypeId)
PUT     /studies/:procTypeId/sltypes/:id        @org.biobank.controllers.study.SpecimenLinkTypeController.updateSpecimenLinkType(procTypeId, id)
DELETE  /studies/:procTypeId/sltypes/:id/:ver   @org.biobank.controllers.study.SpecimenLinkTypeController.removeSpecimenLinkType(procTypeId, id, ver: Long)

# processing types
GET     /studies/:studyId/participants/:id          @org.biobank.controllers.study.ParticipantsController.get(studyId, id: String)
POST    /studies/:studyId/participants              @org.biobank.controllers.study.ParticipantsController.addParticipant(studyId)
PUT     /studies/:studyId/participants/:id          @org.biobank.controllers.study.ParticipantsController.updateParticipant(studyId, id)
GET     /studies/participants/checkUnique/:uniqueId @org.biobank.controllers.study.ParticipantsController.checkUnique(uniqueId)

# centres
GET     /centres                                @org.biobank.controllers.centres.CentresController.list
POST    /centres                                @org.biobank.controllers.centres.CentresController.add
GET     /centres/:id                            @org.biobank.controllers.centres.CentresController.query(id)
PUT     /centres/:id                            @org.biobank.controllers.centres.CentresController.update(id)
POST    /centres/:id/enable                     @org.biobank.controllers.centres.CentresController.enable(id)
POST    /centres/:id/disable                    @org.biobank.controllers.centres.CentresController.disable(id)

# centre location
GET     /centres/:centreId/locations            @org.biobank.controllers.centres.CentresController.getLocations(centreId, locationId: Option[String])
POST    /centres/:centreId/locations            @org.biobank.controllers.centres.CentresController.addLocation(centreId)
DELETE  /centres/:centreId/locations/:id        @org.biobank.controllers.centres.CentresController.removeLocation(centreId, id)

# centre to study link
GET     /centres/:centreId/studies              @org.biobank.controllers.centres.CentresController.getStudies(centreId)
POST    /centres/:centreId/studies/:studyId     @org.biobank.controllers.centres.CentresController.addStudy(centreId, studyId)
DELETE  /centres/:centreId/studies/:studyId     @org.biobank.controllers.centres.CentresController.removeStudy(centreId, studyId)

# Users
GET     /users                                  @org.biobank.controllers.UsersController.list(query: Option[String], sort: Option[String], order: Option[String])
POST    /users                                  @org.biobank.controllers.UsersController.registerUser()
GET     /users/:id                              @org.biobank.controllers.UsersController.user(id)
PUT     /users/:id/name                         @org.biobank.controllers.UsersController.updateName(id)
PUT     /users/:id/email                        @org.biobank.controllers.UsersController.updateEmail(id)
PUT     /users/:id/password                     @org.biobank.controllers.UsersController.updatePassword(id)
PUT     /users/:id/avatarurl                    @org.biobank.controllers.UsersController.updateAvatarUrl(id)
POST    /users/:id/activate                     @org.biobank.controllers.UsersController.activateUser(id)
POST    /users/:id/lock                         @org.biobank.controllers.UsersController.lockUser(id)
POST    /users/:id/unlock                       @org.biobank.controllers.UsersController.unlockUser(id)

# Authentication
GET     /authenticate                           @org.biobank.controllers.UsersController.authenticateUser
POST    /login                                  @org.biobank.controllers.UsersController.login()
POST    /logout                                 @org.biobank.controllers.UsersController.logout()
POST    /passreset                              @org.biobank.controllers.UsersController.passwordReset()

# DTOs
GET     /studies/:studyId/dto/collection        @org.biobank.controllers.study.StudiesController.getCollectionDto(studyId)
GET     /studies/:studyId/dto/processing        @org.biobank.controllers.study.StudiesController.getProcessingDto(studyId)
GET     /counts                                 @org.biobank.controllers.Application.aggregateCounts()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                         controllers.Assets.versioned(path="/public", file: Asset)
