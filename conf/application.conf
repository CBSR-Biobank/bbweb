# Configuration

include "testdata.conf"
include "email.conf"

app {
    version = "0.0.0.7"
}

admin.email="biobank2@gmail.com"
admin.url="biobbank.com"

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!

# Uncomment this line if you want to set secret via environment vars
play.crypto.secret=${?APPLICATION_SECRET}

play.server.http.idleTimeout = 60s
play.server.requestTimeout = 40s

# The application languages
# ~~~~~
#play.i18n.langs="en,de,pl,fr,es"
play.i18n.langs=[ "en" ]

play.filters.enabled += "play.filters.gzip.GzipFilter"

play.filters.disabled += "play.filters.csrf.CSRFFilter"

play.filters.gzip {

    contentType {

        # If non empty, then a response will only be compressed if its content type is in this list.
        whiteList = [ "text/*", "application/javascript", "application/json" ]

        # The black list is only used if the white list is empty.
        # Compress all responses except the ones whose content type is in this list.
        blackList = []
    }
}

play.filters.headers.contentSecurityPolicy = "script-src 'self' 'unsafe-inline' clef.io jquery.min.js;"

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
db.default.driver=org.h2.Driver
db.default.user=sa
db.default.password=""
db.default.logStatements=true

slick.default="org.biobank.query.model.*"

# enable evolutions by default
applyEvolutions.default=false

# Default database configuration using H2 database engine in an in-memory mode
db.default.url="jdbc:h2:mem:bbweb;MODE=MYSQL"

# Default database configuration using H2 database engine in a persistent mode
#db.default.url="jdbc:h2:tcp://localhost/bbweb-db-file;MODE=MYSQL"

# Logger
# ~~~~~
# see logger.xml file in the conf directory .

play.modules.enabled += "org.biobank.modules.AkkaModule"
play.modules.enabled += "org.biobank.modules.BbwebModule"

akka.default-dispatcher.core-pool-size-max = 64
akka.default-dispatcher.fork-join-executor.pool-size-max = 64
akka.actor.debug.receive = on

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  loggin  g-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  jvm-exit-on-fatal-error = on

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "INFO"

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  log-config-on-start = off

  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  actor {
    serialize-messages = off

    serializers {
      java = "akka.serialization.JavaSerializer"
      proto = "akka.remote.serialization.ProtobufSerializer"
    }

    serialization-bindings {
      "com.trueaccord.scalapb.GeneratedMessage" = proto
    }
  }

  debug {
    # enable function of LoggingReceive, which is to log any received message at
    # DEBUG level
    receive = off

    # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill and the like)
    autoreceive = off

    # enable DEBUG logging of actor lifecycle changes
    lifecycle = off

    # enable DEBUG logging of subscription changes on the eventStream
    event-stream = off
  }
}

bbweb-dispatcher {
  # Dispatcher is the name of the event-based dispatcher
  type = Dispatcher
  # What kind of ExecutionService to use
  executor = "fork-join-executor"
  # Configuration for the fork join pool
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 2
    # Parallelism (threads) ... ceil(available processors * factor)
    parallelism-factor = 2.0
    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 10
  }
  # Throughput defines the maximum number of messages to be
  # processed per actor before the thread jumps to the next actor.
  # Set to 1 for as fair as possible.
  throughput = 100
}

akka {
  stdout-loglevel = off # defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = debug
  log-dead-letters = on
  log-config-on-start = off # Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    serialize-messages = off # when on, the akka framework will determine whether or not messages can be serialized, else the plugin
    warn-about-java-serializer-usage = off

    debug {
      receive = on # log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off # log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off # log all actor lifecycle events of all actors
      fsm = off # enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off # enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }

  persistence {
    journal {
      plugin = "jdbc-journal"
      auto-start-journals = ["jdbc-journal"]
    }
    snapshot-store {
      plugin = "jdbc-snapshot-store"
      auto-start-snapshot-stores = ["jdbc-snapshot-store"]
    }

#    circuit-breaker {
#      max-failures = 10
#      call-timeout = 40s
#      reset-timeout = 60s
#    }
  }

  extensions = []

  test {
    # factor by which to scale timeouts during tests, e.g. to account for shared
    # build system load
    timefactor =  1.0

    # duration of EventFilter.intercept waits after the block is finished until
    # all required messages are received
    filter-leeway = 3s

    # duration to wait in expectMsg and friends outside of within() block
    # by default
    single-expect-default = 30s

    # The timeout that is added as an implicit by DefaultTimeout trait
    default-timeout = 5s
  }
}

jdbc-journal {
  slick = ${slick}
  slick.db.numThreads = 20
  slick.db.maxConnections = 100
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 # 30 minutes

  recovery-event-timeout = 60m

  #event-adapters {
  #  test-write-event-adapter = "akka.persistence.jdbc.query.EventAdapterTest$TestWriteEventAdapter"
  #  test-read-event-adapter  = "akka.persistence.jdbc.query.EventAdapterTest$TestReadEventAdapter"
  #}

  #event-adapter-bindings {
  #  "akka.persistence.jdbc.query.EventAdapterTest$Event"        = test-write-event-adapter
  #  "akka.persistence.jdbc.query.EventAdapterTest$TaggedEvent"  = test-write-event-adapter
  #  "akka.persistence.jdbc.query.EventAdapterTest$EventAdapted" = test-read-event-adapter
  #}
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  slick = ${slick}
  slick.db.numThreads = 20
  slick.db.maxConnections = 100
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 # 30 minutes
}

# the akka-persistence-query provider in use
jdbc-read-journal {
  refresh-interval = "100ms"

  max-buffer-size = "250"

  slick = ${slick}
  slick.db.numThreads = 20
  slick.db.maxConnections = 100
  slick.db.minConnections = 1
  slick.db.connectionTimeout = 1800000 # 30 minutes
}

slick {
  driver = "slick.jdbc.MySQLProfile$"
  db {
    host = "localhost"
    port = "3306"
    url = "jdbc:mysql://"${slick.db.host}":"${slick.db.port}"/bbweb?cachePrepStmts=true&cacheCallableStmts=true&cacheServerConfiguration=true&useLocalSessionState=true&elideSetAutoCommits=true&alwaysSendSetIsolation=false&enableQueryTimeouts=false&connectionAttributes=none&verifyServerCertificate=false&useSSL=false&useUnicode=true&useLegacyDatetimeCode=false&serverTimezone=UTC&rewriteBatchedStatements=true"
    user = "bbweb_user"
    password = "bbweb_pwd"
    driver = "com.mysql.jdbc.Driver"
    connectionTestQuery = "SELECT 1"
  }
}
